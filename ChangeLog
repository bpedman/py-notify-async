2007-01-26  Paul Pogonyshev  <pogonyshev@gmx.net>

	* generate-reference.py: Use new `doc/epydoc.css'.  More
	post-processing.

	* docs/epydoc.css: New file.

2007-01-25  Paul Pogonyshev  <pogonyshev@gmx.net>

	* test/condition.py
	(GarbageCollectionConditionTestCase.test_garbage_collection_signal_referenced_1)
	(GarbageCollectionConditionTestCase.test_garbage_collection_signal_referenced_2)
	(GarbageCollectionConditionTestCase.test_signal_garbage_collection):
	New tests.

2007-01-24  Paul Pogonyshev  <pogonyshev@gmx.net>

	* generate-reference.py: Don't generate marked up source code
	files by default.

2007-01-23  Paul Pogonyshev  <pogonyshev@gmx.net>

	* version: Release 0.1.1.

	* NEWS: New file.

	* MANIFEST.in: Include `notify/__init__.py.in', exclude the
	generated file.

	* notify/signal.py (Signal.disconnect): Reset `self._handlers' to
	None if possible.
	(CleanSignal.collect_garbage): collect_garbage() doesn't return
	anything, remove it from the test.

2007-01-21  Paul Pogonyshev  <pogonyshev@gmx.net>

	* notify/signal.py (AbstractSignal.default_exception_handler)
	(AbstractSignal.ignoring_exception_handler)
	(AbstractSignal.printing_exception_handler)
	(AbstractSignal.reraising_exception_handler): New functions.
	(Signal.emit): Call `AbstractSignal.exception_handler' on
	exceptions raised from handlers.
	(Signal): Make `_handlers' and `_blocked_handlers' protected.
	(CleanSignal.collect_garbage): Rewrite.

	* test/condition.py (BaseConditionTestCase.test_mutable): Expand.

	* generate-reference.py: Rename from `generate-docs.py'.

2007-01-17  Paul Pogonyshev  <pogonyshev@gmx.net>

	* generate-docs.py: Update post-processing for newer Epydoc.

	* notify/variable.py (_PredicateOverVariable): Update for new
	signal storage and creation scheme.

	* notify/condition.py (WatcherCondition): Update for new signal
	storage and creation scheme.
	(_Not): Likewise.
	(_Binary): Likewise.
	(_IfElse): Likewise.

	* notify/signal.py (CleanSignal): Reimplement completely.

	* notify/utils.py (_USED_OBJECTS, mark_object_as_used)
	(mark_object_as_unused): Variable and function moved here from
	`notify.base' module.

	* notify/base.py (_USED_VALUE_OBJECTS): Remove from this module.
	(AbstractValueObject.signal_changed): Reimplement for new storage
	scheme.
	(AbstractValueObject._create_signal): Likewise.
	(AbstractValueObject._changed): Likewise.
	(AbstractValueObject._set_used, AbstractValueObject._set_unused):
	Remove from this class and module.

	* run-tests.py: Reimplement so it is possible to run tests by
	name.

2007-01-16  Paul Pogonyshev  <pogonyshev@gmx.net>

	* README: Clarify section about standard test cases.

	* test/condition.py
	(SignalConditionTestCase.test_referenced_signal): New test.

2007-01-15  Paul Pogonyshev  <pogonyshev@gmx.net>

	* notify/condition.py (_Binary._get_dummy_reference): Remove
	method.
	(_IfElse): Reimplement completely and thus make new test pass.
	(_DummyCondition): Remove class (unused.)
	(_get_dummy_reference): New function, replaces removed method of
	`_Binary' class.

	* test/condition.py
	(GarbageCollectionConditionTestCase.test_garbage_collection_ifelse):
	New test.

	* notify/condition.py: Add one-sentence documentation.
	* notify/variable.py: Likewise.



Changes before the project registration on Gna! (2007-01-13) were not logged.


  Copyright (C) 2007 Paul Pogonyshev.

  Copying and distribution of this file, with or without modification,
  are permitted provided the copyright notice and this notice are preserved.



Local Variables:
coding: utf-8
End:
